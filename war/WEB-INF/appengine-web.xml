<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
  <application>linkedopenreasoning</application>
  <version>1</version>

  <!--
    Allows App Engine to send multiple requests to one instance in parallel:
  -->
  <threadsafe>true</threadsafe>
  
  <runtime>java8</runtime> <!-- java 8-->
 <url-stream-handler>urlfetch</url-stream-handler> <!-- java 8-->
  <!--
    Allows App Engine to send multiple requests to one instance in parallel:
  -->

  <!-- Configure java.util.logging -->
  <system-properties>
    <property name="java.util.logging.config.file" value="WEB-INF/logging.properties"/>
    <property name="appengine.file.encoding" value="US-ASCII"/> <!-- java 8-->
  </system-properties>

<resource-files>
		<include path="/ont/**" />
		<include path="/ont/m3/m3**" />
		<include path="/ont/m3/transport**" />
		<include path="/ont/m3/weather**" />
		<include path="/WEB-INF/ontologies/**.**" />
		<include path="/dataset/**" />
        <include path="/ontologies/**.owl" />
        <include path="/SPARQL/**.sparql" />
        <include path="/RULES/**.txt" />
        <include path="/RULES/**.owl" />
        <include path="/RULES/**.**" />
        <include path="/ont/**.owl" />
        <include path="/javascript/**.js" />
        <include path="/javascript/SLOR/**.js" />
        <include path="/ont/health/**.**" />
        
    </resource-files>
  <!--
    HTTP Sessions are disabled by default. To enable HTTP sessions specify:

      <sessions-enabled>true</sessions-enabled>

    It's possible to reduce request latency by configuring your application to
    asynchronously write HTTP session data to the datastore:

      <async-session-persistence enabled="true" />

    With this feature enabled, there is a very small chance your app will see
    stale session data. For details, see
    http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions
  -->
   

</appengine-web-app>
